sleep_bedtime:
  alias: Sleep - Bedtime
  icon: mdi:bed-king
  mode: restart
  sequence:
  - parallel:
    - action: script.master_bedroom_air_night
    - action: script.garage_turn_off
    - action: script.office_turn_off
    - action: fan.turn_off
      target:
        entity_id: '{{ states.fan | selectattr("state", "eq", "on") | rejectattr("entity_id", "search", "bedroom") | rejectattr("attributes.entity_id", "defined") | map(attribute="entity_id") | list }}'
    - action: light.turn_off
      target:
        entity_id: '{{ states.light | selectattr("state", "eq", "on") | rejectattr("entity_id", "search", "bedroom") | rejectattr("attributes.entity_id", "defined") | map(attribute="entity_id") | list }}'
    - action: lock.lock
      target:
        entity_id: '{{ states.lock | selectattr("state", "eq", "unlocked") | selectattr("entity_id", "search", "door$") | rejectattr("attributes.entity_id", "defined") | map(attribute="entity_id") | list }}'
    - action: remote.turn_off
      target:
        entity_id: '{{ states.remote | selectattr("state", "eq", "on") | rejectattr("entity_id", "search", "bedroom") | rejectattr("attributes.entity_id", "defined") | map(attribute="entity_id") | list }}'
    - if:
      - '{{ state_attr("cover.master_bedroom_shades", "current_position") > 0 }}'
      then:
      - action: cover.close_cover
        target: { entity_id: cover.master_bedroom_shades }
    - action: light.turn_on
      data: { brightness: '{{ is_state("person.sasha_keller", "home") and 32 or 160 }}' }
      target: { entity_id: light.master_bedroom_fan_lights }
    - action: switch.turn_off
      target: { entity_id: switch.smart_outlet_a }

sleep_good_morning:
  alias: Sleep - Good Morning
  icon: mdi:white-balance-sunny
  mode: restart
  sequence:
  - parallel:
    - if:
      - '{{ state_attr("cover.master_bedroom_shades", "current_position") < float(states("input_number.master_bedroom_shades_good_morning_open_percent")) }}'
      then:
      - action: cover.set_cover_position
        data: { position: '{{ states("input_number.master_bedroom_shades_good_morning_open_percent") }}' }
        target: { entity_id: cover.master_bedroom_shades }
    - if:
      - '{{ is_state("fan.master_bedroom_fan", "on") }}'
      then:
      - action: fan.turn_off
        target: { entity_id: fan.master_bedroom_fan }
    - if:
      - '{{ is_state("binary_sensor.armed_state", "off") }}'
      then:
      - action: switch.turn_on
        target: { entity_id: switch.disarm }
    - action: script.master_bedroom_air_day
    - action: switch.turn_on
      target: { entity_id: switch.smart_outlet_a }

sleep_good_night:
  alias: Sleep - Good Night
  icon: mdi:sleep
  mode: restart
  sequence:
  - parallel:
    - action: light.turn_off
      target:
        entity_id:
        - light.master_bedroom_closet_lights
        - light.master_bedroom_fan_lights
        - light.master_bedroom_lights
    - if:
      - '{{ is_state("person.sasha_keller", "home") }}'
      then:
      - action: cover.set_position
        data: { percentage: 10 }
        target: { entity_id: cover.master_bedroom_shade_a }
    - if:
      - '{{ is_state("person.samuel_kadolph", "home") }}'
      then:
      - action: fan.set_percentage
        data: { percentage: 75 }
        target: { entity_id: fan.master_bedroom_pedestal_fan }
        enabled: false
    - if:
      - '{{ is_state("alarm_control_panel.konnected_alarm", "disarmed") }}'
      then:
      - choose:
        - conditions:
          - '{{ is_state("input_boolean.sleep_good_night_arms_alarm_home", "on") }}'
          sequence:
          - action: alarm_control_panel.alarm_arm_home
            target: { entity_id: alarm_control_panel.konnected_alarm }
        - conditions:
          - '{{ is_state("input_boolean.sleep_good_night_arms_alarm_away", "on") }}'
          sequence:
          - action: alarm_control_panel.alarm_arm_away
            target: { entity_id: alarm_control_panel.konnected_alarm }

sleep_preheat_bed:
  alias: Sleep - Preheat Bed
  icon: mdi:radiator
  mode: single
  sequence:
  - action: select.select_option
    data: { option: '{{ int(states("input_number.master_bedroom_air_night_bed_heat")) }}' }
    target: { entity_id: select.master_bed_side_b_heat_level }
