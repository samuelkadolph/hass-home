master_bedroom_turn_off:
  alias: Master Bedroom - Turn Off
  icon: mdi:power-off
  mode: single
  sequence:
  - parallel:
    - if:
      - '{{ is_state_attr("climate.master_bedroom_air", "power", true) }}'
      then:
      - service: climate.turn_off
        target: { entity_id: climate.master_bedroom_air }
master_bedroom_turn_on:
  alias: Master Bedroom - Turn On
  icon: mdi:power-on
  mode: single
  sequence:
  - parallel: []

master_bedroom_air_set_day:
  alias: Master Bedroom Air - Day
  icon: mdi:sun-thermometer
  mode: single
  sequence:
  - if:
    - '{{ is_state_attr("climate.master_bedroom_air", "power", true) }}'
    - '{{ is_state_attr("climate.master_bedroom_air", "temperature", states("input_number.master_bedroom_air_night_temperature") | float) }}'
    then:
    - service: weather.get_forecasts
      data: { type: hourly }
      target: { entity_id: weather.home }
      response_variable: forecast
    - if:
      - '{{ forecast["weather.home"].forecast | map(attribute="temperature") | max > states("input_number.master_bedroom_air_day_threshold") | float }}'
      then:
      - service: climate.set_temperature
        data:
          hvac_mode: cool
          temperature: '{{ states("input_number.master_bedroom_air_day_temperature") }}'
        target: { entity_id: climate.master_bedroom_air }
      else:
      - service: climate.turn_off
        target: { entity_id: climate.master_bedroom_air }
master_bedroom_air_set_night:
  alias: Master Bedroom Air - Night
  icon: mdi:snowflake-thermometer
  mode: single
  sequence:
  - if:
    - condition: zone
      entity_id: person.samuel_kadolph
      zone: zone.home
    then:
    - service: climate.set_temperature
      data:
        hvac_mode: cool
        temperature: '{{ states("input_number.master_bedroom_air_night_temperature") }}'
      target: { entity_id: climate.master_bedroom_air }
