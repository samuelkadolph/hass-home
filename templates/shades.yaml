- trigger:
  - platform: time
    at: '12:00:00'
  action:
  - action: weather.get_forecasts
    data: { type: hourly }
    target: { entity_id: weather.home }
    response_variable: forecast
  sensor:
  - name: Shades - Close Percent
    unique_id: shades_close_percent
    state: '{{ forecast["weather.home"].forecast | map(attribute="temperature") | min < float(states("input_number.shades_close_percent_temperature_threshold")) and states("input_number.shades_close_percent") or 0 }}'

- sensor:
  - name: Shades - Open Time
    unique_id: shades_open_time
    device_class: timestamp
    state: >
      {% if now().month in [3,4,5,6,7,8,9,10,11] -%}
        {{ (states("sensor.sun_next_rising") | as_datetime - timedelta(minutes=30)).isoformat() }}
      {% else -%}
        {{ now().replace(hour=5,minute=0,second=0,microsecond=0).isoformat() }}
      {% endif -%}
